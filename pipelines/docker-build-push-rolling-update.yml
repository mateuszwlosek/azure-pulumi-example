trigger: 
 branches:
    include:
      - master

resources:
- repo: self

variables:
  imageRepository: '$(image_repository)'
  containerRegistry: '$(container_registry)'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: '$(image_pull_secret)'
  vmImageName: 'ubuntu-latest'

stages:

- stage: Build
  displayName: Build
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(docker_registry_connection)
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: '$(kubernetes_environment)'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(docker_registry_connection)
              kubernetesServiceConnection: '$(kubernetes_service_endpoint)'

          - task: Kubernetes@1
            displayName: Rolling update app
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: '$(kubernetes_service_endpoint)'
              namespace: '$(namespace)'
              command: 'set'
              arguments: 'image deployments/demo demo=$(container_registry)/$(image_name):$(tag)'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'